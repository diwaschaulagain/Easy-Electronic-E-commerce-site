@model EasyElectronics.Models.ViewModel.ContactViewModel

@{
    ViewBag.Title = "Contact";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<div class="contact">
    <div class="container">
        <div class="spec ">
            <h3>Contact</h3>
            <div class="ser-t">
                <b></b>
                <span><i></i></span>
                <b class="line"></b>
            </div>
        </div>
        <div class=" contact-w3">
            <div class="col-md-5 contact-right">
                <img src="~/UserCss/images/logo2.png" class="img-responsive" alt="">
             
            </div>
            <div class="col-md-7 contact-left">
                
                    <h4>Contact Information</h4>
                    <p>
                        Easy electronics is in service for everyone since 2010 providing costumers with various electronic goods throughout Nepal. Here is how you can contact us.
                    </p>
                    <ul class="contact-list">
                        <li> <i class="fa fa-map-marker" aria-hidden="true"></i>New-Baneshwor, Kathmandu</li>
                        <li><i class="fa fa-envelope" aria-hidden="true"></i><a href="mailto:chaulagaindiwas@yahoo.com">chaulagaindiwas@yahoo.com</a></li>
                        <li> <i class="fa fa-phone" aria-hidden="true"></i>+977 9860562447</li>
                    </ul>

               
                <div id="container">
                    <!--Horizontal Tab-->
                    <div id="parentHorizontalTab">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Subject, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.Subject, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Phone, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Message, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.Message, 3, 2, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Send Message" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>

                <!--Plug-in Initialisation-->
                <script type="text/javascript">
                    $(document).ready(function () {
                        //Horizontal Tab
                        $('#parentHorizontalTab').easyResponsiveTabs({
                            type: 'default', //Types: default, vertical, accordion
                            width: 'auto', //auto or any width like 600px
                            fit: true, // 100% fit in a container
                            tabidentify: 'hor_1', // The tab groups identifier
                            activate: function (event) { // Callback function if tab is switched
                                var $tab = $(this);
                                var $info = $('#nested-tabInfo');
                                var $name = $('span', $info);
                                $name.text($tab.text());
                                $info.show();
                            }
                        });

                        // Child Tab
                        $('#ChildVerticalTab_1').easyResponsiveTabs({
                            type: 'vertical',
                            width: 'auto',
                            fit: true,
                            tabidentify: 'ver_1', // The tab groups identifier
                            activetab_bg: '#fff', // background color for active tabs in this group
                            inactive_bg: '#F5F5F5', // background color for inactive tabs in this group
                            active_border_color: '#c1c1c1', // border color for active tabs heads in this group
                            active_content_border_color: '#5AB1D0' // border color for active tabs contect in this group so that it matches the tab head border
                        });

                        //Vertical Tab
                        $('#parentVerticalTab').easyResponsiveTabs({
                            type: 'vertical', //Types: default, vertical, accordion
                            width: 'auto', //auto or any width like 600px
                            fit: true, // 100% fit in a container
                            closed: 'accordion', // Start closed if in accordion view
                            tabidentify: 'hor_1', // The tab groups identifier
                            activate: function (event) { // Callback function if tab is switched
                                var $tab = $(this);
                                var $info = $('#nested-tabInfo2');
                                var $name = $('span', $info);
                                $name.text($tab.text());
                                $info.show();
                            }
                        });
                    });
                </script>

            </div>

            <div class="clearfix"></div>
        </div>
    </div>
</div>


